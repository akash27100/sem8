#include <iostream>
#include <vector>
#include <omp.h>

using namespace std;

int main() {
    vector<int> numbers = {1, 5, 8, 2, 7, 4, 3, 9, 6};
    int min_val = numbers[0], max_val = numbers[0], sum = 0;
    double avg;

    #pragma omp parallel for reduction(min:min_val) reduction(max:max_val) reduction(+:sum)
    for (int i = 0; i < numbers.size(); ++i) {
        min_val = min(min_val, numbers[i]);
        max_val = max(max_val, numbers[i]);
        sum += numbers[i];
    }

    avg = static_cast<double>(sum) / numbers.size();

    cout << "Minimum value: " << min_val << endl;
    cout << "Maximum value: " << max_val << endl;
    cout << "Sum: " << sum << endl;
    cout << "Average: " << avg << endl;

    return 0;
}


